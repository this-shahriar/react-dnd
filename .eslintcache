[{"/mnt/c/Users/shahr/Work/react-dnd/src/index.js":"1","/mnt/c/Users/shahr/Work/react-dnd/src/reportWebVitals.js":"2","/mnt/c/Users/shahr/Work/react-dnd/src/store/reducers/index.js":"3","/mnt/c/Users/shahr/Work/react-dnd/src/store/actions/index.js":"4","/mnt/c/Users/shahr/Work/react-dnd/src/store/reducers/postReducer.js":"5","/mnt/c/Users/shahr/Work/react-dnd/src/pages/Home/index.js":"6","/mnt/c/Users/shahr/Work/react-dnd/src/components/DragBox/index.js":"7"},{"size":963,"mtime":1608655441385,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608653300166,"results":"10","hashOfConfig":"9"},{"size":170,"mtime":1608653300240,"results":"11","hashOfConfig":"9"},{"size":339,"mtime":1608653300214,"results":"12","hashOfConfig":"9"},{"size":1164,"mtime":1608655867423,"results":"13","hashOfConfig":"9"},{"size":1343,"mtime":1608665679995,"results":"14","hashOfConfig":"9"},{"size":2482,"mtime":1608747258894,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1uje4wp",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/mnt/c/Users/shahr/Work/react-dnd/src/index.js",[],["33","34"],"/mnt/c/Users/shahr/Work/react-dnd/src/reportWebVitals.js",[],"/mnt/c/Users/shahr/Work/react-dnd/src/store/reducers/index.js",[],"/mnt/c/Users/shahr/Work/react-dnd/src/store/actions/index.js",[],"/mnt/c/Users/shahr/Work/react-dnd/src/store/reducers/postReducer.js",[],"/mnt/c/Users/shahr/Work/react-dnd/src/pages/Home/index.js",["35","36","37","38"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { getAllPosts } from \"../../store/actions\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { DragBox } from \"../../components/DragBox\";\r\n\r\nconst HomePage = () => {\r\n  const state = useSelector((state) => state?.postReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllPosts());\r\n  }, []);\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"4rem\" }}>\r\n      <DropArea data={state?.raw} raw />\r\n      <DropArea data={state?.processed} processed />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DropArea = ({ data, raw }) => {\r\n  const dispatch = useDispatch();\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: \"card\",\r\n    drop: (item, monitor) =>\r\n      dispatch({ type: raw ? \"TORAW\" : \"PROCESS\", value: item?.id }),\r\n    collect: (monitor) => ({ isOver: !!monitor?.isOver() }),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      style={{\r\n        backgroundColor: \"darkcyan\",\r\n        padding: \"1rem\",\r\n        flex: 1,\r\n        transition: \"all 0.3s cubic-bezier(.25,.8,.25,1)\",\r\n      }}\r\n    >\r\n      {data?.map((item, index) => (\r\n        <DragBox key={item?.id} data={item} index={index} raw={raw} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","/mnt/c/Users/shahr/Work/react-dnd/src/components/DragBox/index.js",["39"],"import React, { useEffect, useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport const DragBox = ({ data, index, raw }) => {\r\n  const state = useSelector((state) => state?.postReducer);\r\n  const ref = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const [, drop] = useDrop({\r\n    accept: \"card\",\r\n    hover(item, monitor) {\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      const hoveredRect = ref.current.getBoundingClientRect();\r\n      const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2;\r\n      const mousePosition = monitor.getClientOffset();\r\n      const hoverClientY = mousePosition.y - hoveredRect.top;\r\n\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY)\r\n        dispatch({ type: \"HOVER\", value: hoverIndex });\r\n\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY)\r\n        dispatch({ type: \"HOVER\", value: hoverIndex });\r\n\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { id: data?.id, type: \"card\" },\r\n    collect: (monitor) => ({ isDragging: !!monitor?.isDragging() }),\r\n  });\r\n  drag(drop(ref));\r\n\r\n  useEffect(() => {\r\n    !isDragging && dispatch({ type: \"HOVER\", value: null });\r\n  }, [isDragging]);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={{\r\n        marginBottom: index === state?.hoverIndex ? \"4rem\" : \"1rem \",\r\n        padding: \"1rem 1.2rem\",\r\n        border: \"2px solid #fafafa\",\r\n        borderRadius: \"5px\",\r\n        backgroundColor: \"coral\",\r\n        userSelect: \"none\",\r\n        cursor: \"pointer\",\r\n        // boxShadow: isDragging\r\n        //   ? \"rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px\"\r\n        //   : \"rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px\",\r\n        display: isDragging ? \"none\" : \"block\",\r\n        transition: \"all 0.3s cubic-bezier(.25,.8,.25,1)\",\r\n      }}\r\n    >\r\n      <h5>{data?.name}</h5>\r\n      <button\r\n        style={{\r\n          marginTop: \"0.5rem\",\r\n          padding: \"0.4rem 1rem\",\r\n          backgroundColor: \"gold\",\r\n          border: 0,\r\n          borderRadius: \"2px\",\r\n        }}\r\n        onClick={() =>\r\n          dispatch({ type: raw ? \"PROCESS\" : \"TORAW\", value: data?.id })\r\n        }\r\n      >\r\n        {raw ? \"Process\" : \"Raw\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":21,"nodeType":"46","messageId":"47","endLine":2,"endColumn":27},{"ruleId":"44","severity":1,"message":"48","line":4,"column":10,"nodeType":"46","messageId":"47","endLine":4,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":13,"column":6,"nodeType":"51","endLine":13,"endColumn":8,"suggestions":"52"},{"ruleId":"44","severity":1,"message":"53","line":24,"column":12,"nodeType":"46","messageId":"47","endLine":24,"endColumn":18},{"ruleId":"49","severity":1,"message":"50","line":37,"column":6,"nodeType":"51","endLine":37,"endColumn":18,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useDrag' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["57"],"'isOver' is assigned a value but never used.",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [dispatch]",{"range":"63","text":"64"},"Update the dependencies array to be: [dispatch, isDragging]",{"range":"65","text":"66"},[435,437],"[dispatch]",[1313,1325],"[dispatch, isDragging]"]